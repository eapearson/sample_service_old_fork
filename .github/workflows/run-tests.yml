---
name: Run all tests manually
on:
  workflow_dispatch:
jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - name: Check out GitHub Repo
        uses: actions/checkout@v2

      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date -u +'%Y-%m-%dT%H:%M:%SZ')"

      - uses: FranzDiebold/github-env-vars-action@v2

      - name: Print environment variables; helps diagnosing issues with a workflow
        run: |
          echo "CI_REPOSITORY_SLUG=$CI_REPOSITORY_SLUG"
          echo "CI_REPOSITORY_OWNER=$CI_REPOSITORY_OWNER"
          echo "CI_REPOSITORY_OWNER_SLUG=$CI_REPOSITORY_OWNER_SLUG"
          echo "CI_REPOSITORY_NAME=$CI_REPOSITORY_NAME"
          echo "CI_REPOSITORY_NAME_SLUG=$CI_REPOSITORY_NAME_SLUG"
          echo "CI_REPOSITORY=$CI_REPOSITORY"
          echo "CI_REF_SLUG=$CI_REF_SLUG"
          echo "CI_ACTION_REF_NAME=$CI_ACTION_REF_NAME"
          echo "CI_ACTION_REF_NAME_SLUG=$CI_ACTION_REF_NAME_SLUG"
          echo "CI_REF_NAME=$CI_REF_NAME"
          echo "CI_REF_NAME_SLUG=$CI_REF_NAME_SLUG"
          echo "CI_REF=$CI_REF"
          echo "CI_HEAD_REF_SLUG=$CI_HEAD_REF_SLUG"
          echo "CI_HEAD_REF=$CI_HEAD_REF"
          echo "CI_BASE_REF_SLUG=$CI_BASE_REF_SLUG"
          echo "CI_BASE_REF=$CI_BASE_REF"
          echo "CI_SHA_SHORT=$CI_SHA_SHORT"
          echo "CI_SHA=$CI_SHA"
          echo "CI_ACTOR=$CI_ACTOR"
          echo "CI_EVENT_NAME=$CI_EVENT_NAME"
          echo "CI_RUN_ID=$CI_RUN_ID"
          echo "CI_RUN_NUMBER=$CI_RUN_NUMBER"
          echo "CI_WORKFLOW=$CI_WORKFLOW"
          echo "CI_ACTION=$CI_ACTION"
          echo "BUILD_DATE=${{ env.BUILD_DATE }}"

       # Prepare for tests
      - name: Run test begin tasks
        run: make host-test-begin

      # Run unit tests
      - name: Run unit tests
        run: make host-test-unit

      # Start services and set up arango
      - name: Run services and prep arango
        run:  make host-test-prepare-arango

      # Run integration tests
      - name: Run integration tests
        run:  make host-test-integration

      # Run system tests
      - name: Run system tests
        run:  make host-test-system

      # Clean up after tests.
      # This also forces the coverage data to be emitted from the
      # sampleservice into files.
      - name: Stop and remove all test containers system tests
        run:  make host-test-stop

      # Finish up tests (htmlcov, lcov)
      - name: Run test end tasks
        run: make host-test-end

      - name: Send to Codecov
        uses: codecov/codecov-action@v2
        with: 
          files: ./cov_profile.lcov
